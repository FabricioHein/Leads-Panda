import { ClientesRepository } from 'src/repositories/clientes.repository';
import { HistoricoClienteRepository } from 'src/repositories/historico-cliente.repository';
export declare class ClientesService {
    private clientesRepository;
    private historicoClienteRepository;
    constructor(clientesRepository: ClientesRepository, historicoClienteRepository: HistoricoClienteRepository);
    getByIdName(name: any): Promise<{
        id: number;
        nome: string;
        sobrenome: string;
        email: string;
        empresa: string;
        data_nascimento: Date;
        cpf: string;
        cnpj: string;
        rg: string;
        telefone: string;
        responsavel: string;
        linkFoto: string;
        sexoId: number;
        planoId: number;
        empresa_configId: number;
        cep: string;
        logradouro: string;
        bairro: string;
        estado: string;
        cidade: string;
        pais: string;
        complemento: string;
        numero: string;
        created_at: Date;
        updated_at: Date;
    }[]>;
    createClienteConfig(data: any): Promise<string>;
    atualizarClientes(data: any): Promise<{
        id: number;
        nome: string;
        sobrenome: string;
        email: string;
        empresa: string;
        data_nascimento: Date;
        cpf: string;
        cnpj: string;
        rg: string;
        telefone: string;
        responsavel: string;
        linkFoto: string;
        sexoId: number;
        planoId: number;
        empresa_configId: number;
        cep: string;
        logradouro: string;
        bairro: string;
        estado: string;
        cidade: string;
        pais: string;
        complemento: string;
        numero: string;
        created_at: Date;
        updated_at: Date;
    }>;
    getAllClientes(empresa_configId: any): Promise<({
        sexo: {
            id: number;
            descricao: string;
            created_at: Date;
            updated_at: Date;
        };
        historico_cliente: {
            created_at: Date;
            valor: string;
            operador: string;
        }[];
    } & {
        id: number;
        nome: string;
        sobrenome: string;
        email: string;
        empresa: string;
        data_nascimento: Date;
        cpf: string;
        cnpj: string;
        rg: string;
        telefone: string;
        responsavel: string;
        linkFoto: string;
        sexoId: number;
        planoId: number;
        empresa_configId: number;
        cep: string;
        logradouro: string;
        bairro: string;
        estado: string;
        cidade: string;
        pais: string;
        complemento: string;
        numero: string;
        created_at: Date;
        updated_at: Date;
    })[]>;
    createHistoricoClientes(data: any): Promise<{
        id: number;
        chave: string;
        valor: string;
        operador: string;
        created_at: Date;
        updated_at: Date;
        empresa_configId: number;
    }>;
    createClientes(data: any): Promise<{
        id: number;
        nome: string;
        sobrenome: string;
        email: string;
        empresa: string;
        data_nascimento: Date;
        cpf: string;
        cnpj: string;
        rg: string;
        telefone: string;
        responsavel: string;
        linkFoto: string;
        sexoId: number;
        planoId: number;
        empresa_configId: number;
        cep: string;
        logradouro: string;
        bairro: string;
        estado: string;
        cidade: string;
        pais: string;
        complemento: string;
        numero: string;
        created_at: Date;
        updated_at: Date;
    }>;
    deleteClientes(data: any): Promise<{
        id: number;
        nome: string;
        sobrenome: string;
        email: string;
        empresa: string;
        data_nascimento: Date;
        cpf: string;
        cnpj: string;
        rg: string;
        telefone: string;
        responsavel: string;
        linkFoto: string;
        sexoId: number;
        planoId: number;
        empresa_configId: number;
        cep: string;
        logradouro: string;
        bairro: string;
        estado: string;
        cidade: string;
        pais: string;
        complemento: string;
        numero: string;
        created_at: Date;
        updated_at: Date;
    }>;
}
