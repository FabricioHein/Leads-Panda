generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //directUrl = env("DIRECT_URL")
}

model Plan {
  id             Int             @id @default(autoincrement())
  name           String          @db.VarChar(100)
  price          Float
  empresa_config empresa_config?
  @@map("planos")
}

model Payment {
  id Int @id @default(autoincrement())

  amount           Float
  date             DateTime        @default(now())
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  empresa_configId Int?

  @@map("pagamentos")
}

model CreditCard {
  id         Int    @id @default(autoincrement())
  cardNumber String @db.VarChar(19) // Format: 16 digits + 3 spaces for formatting
  expiryDate String @db.VarChar(5) // Format: MM/YY
  cvv        String @db.VarChar(4) // Up to 4 digits
  userId     Int

  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  empresa_configId Int?

   @@map("credit_card")
}

model EmailVerification {
  id        String    @id @default(uuid())
  email     String    @unique() @db.VarChar(255)
  code      String    @unique() @db.VarChar(255)
  createdAt DateTime? @default(now()) @map("created_at")

  @@map("email_verifications")
}

model ResetPassword {
  id        String    @id @default(uuid())
  email     String    @unique() @db.VarChar(255)
  token     String    @unique() @db.VarChar(255)
  expireIn  DateTime? @map("expire_in")
  createdAt DateTime? @default(now()) @map("created_at")

  @@map("reset_passwords")
}

model chat_info {
  chat_info_id           Int             @id @default(autoincrement())
  uuid                   String?         @db.Text()
  type                   String?         @db.VarChar(20)
  msg_inicial            String?         @db.Text()
  modelo_ai              String?         @db.Text()
  fluxo                  Json?
  bot_ativo              Boolean?        @default(true)
  chat_gpt_bot_ativo     Boolean?        @default(false)
  atendimento_manual     Boolean?        @default(false)
  foto_bot_ativo         Boolean?        @default(true)
  foto_usuario_ativo     Boolean?        @default(true)
  bot_nome               String?         @db.VarChar(150)
  bot_foto               String?         @db.Text()
  foto_fundo             String?         @db.Text()
  usario_foto            String?         @db.Text()
  cor_fundo              String?         @db.VarChar(20)
  cor_conversa_user      String?         @db.VarChar(20)
  cor_conversa_atend     String?         @db.VarChar(20)
  cor_texto_user         String?         @db.VarChar(20)
  cor_texto_atend        String?         @db.VarChar(20)
  cor_botao_enviar       String?         @db.VarChar(20)
  texto_input            String?         @db.VarChar(20)
  tamanho_font_mgm       Int?
  tamanho_avatar_usuario Int?
  empresa_configId       Int?
  anexo_documento        Boolean?        @default(true)
  created_at             DateTime?       @default(now())
  updated_at             DateTime?       @updatedAt
  chat                   chat[]
  key_chatgpt            String?         @db.Text()
  organization_chatgpt   String?         @db.Text()
  key_facebook           String?         @db.Text()
  key_instagram          String?         @db.Text()
  token_whatsapp         String?         @db.Text()
  app_secret_whatsapp    String?         @db.Text()
  wa_id_numero_telefone  String?         @db.Text()
  empresa_config         empresa_config? @relation(fields: [empresa_configId], references: [id])
}

model integracao {
  integracao_id Int @id @default(autoincrement())

  empresa_config empresa_config? @relation(fields: [empresa_configId], references: [id])
  empresa_configId     Int?
}

model messages {
  message_id  Int        @id @default(autoincrement())
  username    String?    @db.VarChar(50)
  text        String?
  type        String?    @db.VarChar(10)
  whatsapp_id String?    @db.VarChar(150)
  chat_id     Int
  atendimento Boolean?   @default(false)
  created_at  DateTime?  @default(now())
  updated_at  DateTime?  @updatedAt
  arquivos    arquivos[]
  chat        chat       @relation(fields: [chat_id], references: [chat_id])
}

model chat {
  chat_id            Int             @id @default(autoincrement())
  uuid               String?         @db.VarChar(300)
  nome               String?         @db.VarChar(50)
  telefone           String?         @unique @db.VarChar(50)
  email              String?         @unique @db.VarChar(50)
  chat_info_id       Int?
  empresa_configId         Int?
  created_at         DateTime?       @default(now())
  updated_at         DateTime?       @updatedAt
  chat_open          Boolean?        @default(false)
  data_close         DateTime?
  nome_usuario_close String?         @db.VarChar(25)
  chat_app           String?         @default("web") @db.VarChar(5)
  taskId             Int?
  chat_info          chat_info?      @relation(fields: [chat_info_id], references: [chat_info_id])
  empresa_config     empresa_config? @relation(fields: [empresa_configId], references: [id])
  task               task?           @relation(fields: [taskId], references: [id])
  messages           messages[]
}

model motivos {
  id               Int             @id @default(autoincrement())
  descricao        String?         @db.Text()
  empresa_configId Int?
  codigo           String?         @db.VarChar(20)
  nome             String?         @db.Text()
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  task             task[]
}

model msg_padrao {
  id               Int             @id @default(autoincrement())
  descricao        String?
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  empresa_configId Int?
}

model agenda {
  id          Int              @id @default(autoincrement())
  title       String?
  description String?
  className   String?          @db.VarChar(20)
  status      String?          @db.VarChar(10)
  date_start  DateTime?
  date_end    DateTime?
  created_at  DateTime?        @default(now())
  updated_at  DateTime?        @updatedAt
  Users       agenda_user[]
  cliente     agenda_cliente[]
}

model agenda_cliente {
  id               Int @id @default(autoincrement())
  agendaId         Int
  empresa_configId Int

  agenda  agenda  @relation(fields: [agendaId], references: [id])
  cliente cliente @relation(fields: [empresa_configId], references: [id])

  @@unique([empresa_configId, agendaId])
}

model agenda_user {
  id       Int    @id @default(autoincrement())
  userId   Int
  agendaId Int
  Users    Users  @relation(fields: [userId], references: [id])
  agenda   agenda @relation(fields: [agendaId], references: [id])

  @@unique([userId, agendaId])
}

model times {
  id         Int       @id @default(autoincrement())
  descricao  String?
  metasId    Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  metas      metas?    @relation(fields: [metasId], references: [id])
  Users      Users[]
}

model metas {
  id               Int             @id @default(autoincrement())
  descricao        String?
  status           String?         @db.VarChar(50)
  valor_meta       Decimal?        @db.Decimal(10, 2)
  valor_alcancado  Decimal?        @db.Decimal(10, 2)
  data_inicial     DateTime?
  data_final       DateTime?
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  empresa_configId Int?
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  taks             task[]
  times            times[]
}

model tipo_projeto {
  id         Int       @id @default(autoincrement())
  descricao  String?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  projeto    projeto[]
}

model campanha_mkt {
  id               Int              @id @default(autoincrement())
  titulo           String?          @db.VarChar(50)
  html_body        String?
  empresa_configId Int?
  tipo_msgId       Int?
  created_at       DateTime?        @default(now())
  updated_at       DateTime?        @updatedAt
  data_final       DateTime?
  data_inicial     DateTime?
  status           String?          @db.VarChar(10)
  campanha_lista   campanha_lista[]
  empresa_config   empresa_config?  @relation(fields: [empresa_configId], references: [id])
  tipo_msg         tipo_msg?        @relation(fields: [tipo_msgId], references: [id])
  email            email[]
  sms              sms[]
}

model lista_mkt {
  id                    Int                     @id @default(autoincrement())
  titulo                String?                 @db.VarChar(50)
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  campanha_lista        campanha_lista[]
  lista_contato_cliente lista_contato_cliente[]
}

model lista_contato_cliente {
  id               Int        @id @default(autoincrement())
  created_at       DateTime?  @default(now())
  updated_at       DateTime?  @updatedAt
  lista_mktId      Int?
  contactsId       Int?
  empresa_configId Int?
  cliente          cliente?   @relation(fields: [empresa_configId], references: [id])
  Contacts         Contacts?  @relation(fields: [contactsId], references: [id])
  lista_mkt        lista_mkt? @relation(fields: [lista_mktId], references: [id])
}

model campanha_lista {
  id             Int           @id @default(autoincrement())
  updated_at     DateTime?     @updatedAt
  campanha_mktId Int?
  lista_mktId    Int?
  created_at     DateTime?     @default(now())
  lista_mkt      lista_mkt?    @relation(fields: [lista_mktId], references: [id])
  campanha_mkt   campanha_mkt? @relation(fields: [campanha_mktId], references: [id])
}

model page_link {
  id               String   @id @default(uuid())
  profileText      String?  @db.Text()
  nome_link        String?  @db.Text()
  linkProfile      String?  @db.Text()
  public           Boolean?
  backgroundColor1 String?  @db.VarChar(10)
  backgroundColor2 String?  @db.VarChar(10)
  colorText1       String?  @db.VarChar(10)
  colorText2       String?  @db.VarChar(10)

  backgroundImage    String?         @db.Text()
  buttonColor        String?         @db.VarChar(10)
  showProfilePicture Boolean?
  showShareLink      Boolean?
  links              LinkCompany[]
  clientId           Int?
  empresa_config     empresa_config? @relation(fields: [clientId], references: [id])

  @@map("page_link")
}

model LinkCompany {
  id          Int        @id @default(autoincrement())
  label       String     @db.VarChar(20)
  href        String     @db.Text()
  icon        String     @db.VarChar(20)
  page_link   page_link? @relation(fields: [page_linkId], references: [id])
  page_linkId String?

  @@map("link_company")
}

model formulario_dinamico {
  id               Int             @id @default(autoincrement())
  publico          Boolean?
  url_formulario   String?         @db.VarChar(250)
  title            String?         @db.VarChar(50)
  json             Json?
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  projetoId        Int?
  processoId       Int?
  empresa_configId Int?
  nome_campanha    String?         @db.VarChar(255)
  link_redirect    String?         @db.VarChar(800)
  logo             String?         @db.VarChar(500)
  logo_width       String?         @db.VarChar(10)
  logo_height      String?         @db.VarChar(10)
  taskId           Int?
  form_ask         form_ask[]
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  task             task?           @relation(fields: [taskId], references: [id])

  @@map("link")
}

model form_ask {
  id                    Int                  @id @default(autoincrement())
  formulario_dinamicoId Int?
  json                  Json?
  created_at            DateTime?            @default(now())
  updated_at            DateTime?            @updatedAt
  formulario_dinamico   formulario_dinamico? @relation(fields: [formulario_dinamicoId], references: [id])
}

model projeto {
  id               Int             @id @default(autoincrement())
  title            String?         @db.VarChar(50)
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  tipo_projetoId   Int?
  operador         String?         @db.VarChar(150)
  empresa_configId Int?
  processo         processo[]
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  tipo_projeto     tipo_projeto?   @relation(fields: [tipo_projetoId], references: [id])
}

model processo {
  id         Int       @id @default(autoincrement())
  title      String?   @db.VarChar(500)
  color      String?   @db.VarChar(10)
  etapa      Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  projetoId  Int?
  operador   String?   @db.VarChar(150)
  projeto    projeto?  @relation(fields: [projetoId], references: [id])
  task       task[]
}

model task_produto {
  id        Int      @id @default(autoincrement())
  taskId    Int?
  produtoId Int?
  produto   produto? @relation(fields: [produtoId], references: [id])
  task      task?    @relation(fields: [taskId], references: [id])
}

model task {
  id                  Int                   @id @default(autoincrement())
  contato_nome        String?               @db.VarChar(100)
  contato_numero      String?               @db.VarChar(20)
  title               String?               @db.VarChar(100)
  cpf                 String?               @db.VarChar(150)
  description         String?
  processoId          Int?
  valor_Inicial       Decimal?              @db.Decimal(10, 2)
  valor_Final         Decimal?              @db.Decimal(10, 2)
  marcar_venda        Boolean?
  desconto            Decimal?              @db.Decimal(10, 2)
  previsao_fechamento DateTime?
  status              String?               @db.VarChar(50)
  emailId             Int?
  anotacoesId         Int?
  contactsId          Int?
  usersId             Int?
  operador            String?               @db.VarChar(150)
  created_at          DateTime?             @default(now())
  updated_at          DateTime?             @updatedAt
  metasId             Int?
  vendaId             Int?                  @unique
  empresa             String?               @db.VarChar(100)
  motivosId           Int?
  produtoId           Int?
  arquivado           Boolean?
  anotacoes           anotacoes[]
  arquivos            arquivos[]
  chat                chat[]
  email               email[]
  formulario_dinamico formulario_dinamico[]
  log_taks            log_taks[]
  sub_task            sub_task[]
  Contacts            Contacts?             @relation(fields: [contactsId], references: [id])
  metas               metas?                @relation(fields: [metasId], references: [id])
  motivos             motivos?              @relation(fields: [motivosId], references: [id])
  processo            processo?             @relation(fields: [processoId], references: [id])
  Users               Users?                @relation(fields: [usersId], references: [id])
  task_produto        task_produto[]
  venda               venda?
}

model mensageria {
  id                 Int       @id @default(autoincrement())
  processo           String    @db.VarChar(20)
  data_processamento DateTime?
  data_envio         DateTime
  created_at         DateTime? @default(now())
  updated_at         DateTime? @updatedAt
  tipo_msgId         Int?
  emailId            Int?
  smsId              Int?
  email              email?    @relation(fields: [emailId], references: [id])
  sms                sms?      @relation(fields: [smsId], references: [id])
  tipo_msg           tipo_msg? @relation(fields: [tipo_msgId], references: [id])
}

model tipo_msg {
  id           Int            @id @default(autoincrement())
  tipo_msgm    String         @db.VarChar(20)
  created_at   DateTime?      @default(now())
  updated_at   DateTime?      @updatedAt
  campanha_mkt campanha_mkt[]
  mensageria   mensageria[]
}

model email {
  id             Int           @id @default(autoincrement())
  titulo         String        @db.VarChar(50)
  from           String        @db.VarChar(50)
  to             String        @db.VarChar(50)
  html_body      String
  data_envio     DateTime
  taskId         Int?
  campanha_mktId Int?
  attachments    attachments[]
  campanha_mkt   campanha_mkt? @relation(fields: [campanha_mktId], references: [id])
  task           task?         @relation(fields: [taskId], references: [id])
  mensageria     mensageria[]
}

model sms {
  id             Int           @id @default(autoincrement())
  titulo         String        @db.VarChar(50)
  from           String        @db.VarChar(50)
  to             String        @db.VarChar(50)
  body           String
  data_envio     DateTime
  campanha_mktId Int?
  mensageria     mensageria[]
  campanha_mkt   campanha_mkt? @relation(fields: [campanha_mktId], references: [id])
}

model attachments {
  id          Int       @id @default(autoincrement())
  link        String?
  description String?
  emailId     Int?
  created_at  DateTime? @default(now())
  updated_at  DateTime? @updatedAt
  email       email?    @relation(fields: [emailId], references: [id])
}

model arquivos {
  id               Int       @id @default(autoincrement())
  link             String?   @db.Text()
  description      String?
  created_at       DateTime? @default(now())
  updated_at       DateTime? @updatedAt
  taskId           Int?
  empresa_configId Int?

  cliente            cliente?  @relation(fields: [empresa_configId], references: [id])
  task               task?     @relation(fields: [taskId], references: [id])
  messages           messages? @relation(fields: [messagesMessage_id], references: [message_id])
  messagesMessage_id Int?
}

model anotacoes {
  id          Int       @id @default(autoincrement())
  title       String?
  description String?
  date        DateTime?
  is_fav      Boolean?
  tag         String?   @db.VarChar(10)
  created_at  DateTime? @default(now())
  updated_at  DateTime? @updatedAt
  taskId      Int?
  task        task?     @relation(fields: [taskId], references: [id])
}

model log_taks {
  id         Int       @id @default(autoincrement())
  chave      String?   @db.VarChar(50)
  valor      String?   @db.VarChar(50)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  taskId     Int?
  task       task?     @relation(fields: [taskId], references: [id])
}

model sub_task {
  id               Int       @id @default(autoincrement())
  title            String?
  description      String?
  description_text String?
  priority         String?   @db.VarChar(10)
  status           String?   @db.VarChar(10)
  date_start       DateTime?
  date_end         DateTime?
  created_at       DateTime? @default(now())
  updated_at       DateTime? @updatedAt
  taskId           Int?
  task             task?     @relation(fields: [taskId], references: [id])
}

model empresa_config {
  id                Int                 @id @default(autoincrement())
  logo_link         String?
  cover_link        String?
  nome_empresa      String?             @db.VarChar(150)
  nome_fantasia     String?             @db.VarChar(150)
  cnpj_cpf          String?             @db.VarChar(21)
  telefone          String?             @db.VarChar(25)
  responsavel       String?             @db.VarChar(25)
  email             String?             @db.VarChar(150)
  departamento      String?             @db.VarChar(150)
  setor             String?             @db.VarChar(150)
  created_at        DateTime?           @default(now())
  updated_at        DateTime?           @updatedAt
  logradouro        String?             @db.VarChar(150)
  bairro            String?             @db.VarChar(150)
  estado            String?             @db.VarChar(150)
  cidade            String?             @db.VarChar(150)
  pais              String?             @db.VarChar(150)
  complemento       String?             @db.VarChar(150)
  cep               String?             @db.VarChar(25)
  numero            String?             @db.VarChar(20)
  categoria_produto categoria_produto[]

  cliente             cliente[]
  Contacts            Contacts[]
  formulario_dinamico formulario_dinamico[]
  fornecedor          fornecedor[]
  metas               metas[]
  motivos             motivos[]
  produto             produto[]
  projeto             projeto[]
  servico             servico[]
  Users               Users[]
  venda               venda[]
  msg_padrao          msg_padrao[]
  page_link           page_link[]
  currentPlanId       Int?                  @unique
  currentPlan         Plan?                 @relation(fields: [currentPlanId], references: [id])
  creditCards         CreditCard[]
  payments            Payment[]
  chat_info           chat_info[]
  integracao          integracao[]
  chat                chat[]
  campanha_mkt        campanha_mkt[]

  @@map("config_clientes")
}

model cliente {
  id                    Int                     @id @default(autoincrement())
  nome                  String?                 @db.VarChar(200)
  sobrenome             String?                 @db.VarChar(200)
  email                 String?                 @db.VarChar(200)
  empresa               String?                 @db.VarChar(150)
  data_nascimento       DateTime?
  cpf                   String?                 @db.VarChar(150)
  cnpj                  String?                 @db.VarChar(150)
  rg                    String?                 @db.VarChar(150)
  telefone              String?                 @db.VarChar(25)
  responsavel           String?                 @db.VarChar(25)
  linkFoto              String?
  sexoId                Int?
  planoId               Int?
  empresa_configId      Int?
  cep                   String?                 @db.VarChar(25)
  logradouro            String?                 @db.VarChar(150)
  bairro                String?                 @db.VarChar(150)
  estado                String?                 @db.VarChar(150)
  cidade                String?                 @db.VarChar(150)
  pais                  String?                 @db.VarChar(150)
  complemento           String?                 @db.VarChar(150)
  numero                String?                 @db.VarChar(20)
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  arquivos              arquivos[]
  empresa_config        empresa_config?         @relation(fields: [empresa_configId], references: [id])
  sexo                  sexo?                   @relation(fields: [sexoId], references: [id])
  historico_cliente     historico_cliente[]
  lista_contato_cliente lista_contato_cliente[]
  agenda_cliente        agenda_cliente[]
}

model historico_cliente {
  id               Int       @id @default(autoincrement())
  chave            String?   @db.VarChar(25)
  valor            String?   @db.VarChar(500)
  operador         String?   @db.VarChar(50)
  created_at       DateTime? @default(now())
  updated_at       DateTime? @updatedAt
  empresa_configId Int?
  cliente          cliente?  @relation(fields: [empresa_configId], references: [id])
}

model categoria_produto {
  id               Int             @id @default(autoincrement())
  codigo           String          @db.VarChar(150)
  nome             String          @db.VarChar(150)
  detalhamento     String?         @db.VarChar(500)
  operador         String          @db.VarChar(150)
  empresa_configId Int?
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  produto          produto[]
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
}

model produto {
  id                  Int                @id @default(autoincrement())
  codigo              String             @db.VarChar(150)
  nome                String             @db.VarChar(150)
  detalhamento        String?            @db.VarChar(500)
  link_img            String?
  qtd_estoque         Decimal?           @db.Decimal(10, 2)
  preco_venda         Decimal?           @db.Decimal(10, 2)
  ativo               Boolean?
  created_at          DateTime?          @default(now())
  updated_at          DateTime?          @updatedAt
  operador            String             @db.VarChar(150)
  categoria_produtoId Int?
  empresa_configId    Int?
  descricao           String?
  categoria_produto   categoria_produto? @relation(fields: [categoria_produtoId], references: [id])
  empresa_config      empresa_config?    @relation(fields: [empresa_configId], references: [id])
  task_produto        task_produto[]
}

model servico {
  id               Int             @id @default(autoincrement())
  codigo           String          @db.VarChar(150)
  nome             String          @db.VarChar(150)
  detalhamento     String?
  valor_hora       Decimal         @db.Decimal(10, 2)
  ativo            Boolean
  operador         String?         @db.VarChar(150)
  empresa_configId Int?
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
}

model venda {
  id               Int             @id @default(autoincrement())
  valor_total      Decimal?        @db.Decimal(10, 2)
  status           String          @default("venda") @db.VarChar(20)
  empresa_configId Int?
  taskId           Int?            @unique
  usersId          Int?
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
  task             task?           @relation(fields: [taskId], references: [id])
  Users            Users?          @relation(fields: [usersId], references: [id])
}

model fornecedor {
  id               Int             @id @default(autoincrement())
  link_img         String?
  nome_responsavel String?         @db.VarChar(50)
  email            String?         @db.VarChar(20)
  empresa          String?         @db.VarChar(50)
  cnpj             String?         @db.VarChar(50)
  telefone         String?         @db.VarChar(25)
  celular          String?         @db.VarChar(25)
  foto             String?
  ativo            Boolean?
  created_at       DateTime?       @default(now())
  updated_at       DateTime?       @updatedAt
  operador         String?         @db.VarChar(150)
  empresa_configId Int?
  empresa_config   empresa_config? @relation(fields: [empresa_configId], references: [id])
}

model permissao_modulos {
  id                  Int                   @id @default(autoincrement())
  ver                 Boolean?
  created_at          DateTime?             @default(now())
  updated_at          DateTime?             @updatedAt
  userId              Int?
  moduloId            Int?
  historico_permissao historico_permissao[]
  modulo              modulo?               @relation(fields: [moduloId], references: [id])
  Users               Users?                @relation(fields: [userId], references: [id])
}

model permissao_sub_modulos {
  id                  Int                   @id @default(autoincrement())
  editar              Boolean?
  ver                 Boolean?
  deletar             Boolean?
  created_at          DateTime?             @default(now())
  updated_at          DateTime?             @updatedAt
  userId              Int?
  subModuloId         Int?
  historico_permissao historico_permissao[]
  subModulo           subModulo?            @relation(fields: [subModuloId], references: [id])
  Users               Users?                @relation(fields: [userId], references: [id])
}

model historico_permissao {
  id                      Int                    @id @default(autoincrement())
  operador                String?                @db.VarChar(150)
  descricao               String?
  created_at              DateTime?              @default(now())
  updated_at              DateTime?              @updatedAt
  permissao_modulosId     Int?
  permissao_sub_modulosId Int?
  permissao_modulos       permissao_modulos?     @relation(fields: [permissao_modulosId], references: [id])
  permissao_sub_modulos   permissao_sub_modulos? @relation(fields: [permissao_sub_modulosId], references: [id])
}

model modulo {
  id                Int                 @id @default(autoincrement())
  nome              String?             @db.VarChar(150)
  url               String?             @db.VarChar(150)
  ativo             Boolean?
  ordem             Int?
  icon              String?             @db.VarChar(51)
  created_at        DateTime?           @default(now())
  updated_at        DateTime?           @updatedAt
  permissao_modulos permissao_modulos[]
  subModulo         subModulo[]
}

model subModulo {
  id                    Int                     @id @default(autoincrement())
  nome                  String?                 @db.VarChar(150)
  url                   String?                 @db.VarChar(150)
  ativo                 Boolean?
  icon                  String?                 @db.VarChar(40)
  ordem                 Int?
  moduloId              Int?
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  permissao_sub_modulos permissao_sub_modulos[]
  modulo                modulo?                 @relation(fields: [moduloId], references: [id])

  @@map("sub_modulo")
}

model sexo {
  id         Int       @id @default(autoincrement())
  descricao  String?   @db.VarChar(11)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  cliente    cliente[]
  Users      Users[]

  @@map("sexo_enum")
}

model opcao {
  id         Int       @id @default(autoincrement())
  descricao  String?   @db.VarChar(11)
  Opcao      Boolean?
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

model TipoUsuario {
  id         Int       @id @default(autoincrement())
  descricao  String?   @db.VarChar(21)
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@map("tipo_usuario_enum")
}

model Contacts {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(255)
  number                String?                 @unique @db.VarChar(20)
  profilePicUrl         String?
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  email                 String?                 @unique @db.VarChar(255)
  empresa_configId      Int?
  logradouro            String?                 @db.VarChar(150)
  bairro                String?                 @db.VarChar(150)
  estado                String?                 @db.VarChar(150)
  cidade                String?                 @db.VarChar(150)
  pais                  String?                 @db.VarChar(150)
  complemento           String?                 @db.VarChar(150)
  numero                String?                 @db.VarChar(20)
  cep                   String?                 @db.VarChar(25)
  empresa_config        empresa_config?         @relation(fields: [empresa_configId], references: [id])
  lista_contato_cliente lista_contato_cliente[]
  task                  task[]

  @@map("contatos")
}

model Users {
  id                    Int                     @id @default(autoincrement())
  nome                  String?                 @db.VarChar(255)
  sobrenome             String?                 @db.VarChar(200)
  empresa               String?                 @db.VarChar(150)
  cpf                   String?                 @db.VarChar(150)
  telefone              String?                 @db.VarChar(25)
  linkFoto              String?
  isAdmin               Boolean?
  themeDark             Boolean?
  operador              String?                 @db.VarChar(150)
  sexoId                Int?
  email                 String?                 @unique @db.VarChar(255)
  profile               String?                 @default("admin") @db.VarChar(255)
  created_at            DateTime?               @default(now())
  updated_at            DateTime?               @updatedAt
  last_login            DateTime?
  verifiedAt            DateTime?
  timesId               Int?
  cep                   String?                 @db.VarChar(25)
  logradouro            String?                 @db.VarChar(150)
  bairro                String?                 @db.VarChar(150)
  estado                String?                 @db.VarChar(150)
  cidade                String?                 @db.VarChar(150)
  pais                  String?                 @db.VarChar(150)
  complemento           String?                 @db.VarChar(150)
  numero                String?                 @db.VarChar(20)
  primeiro_acesso       Boolean?
  gerente_conta         Boolean?
  termos                Boolean?
  password              String?
  empresa_configId      Int?
  permissao_modulos     permissao_modulos[]
  permissao_sub_modulos permissao_sub_modulos[]
  task                  task[]
  empresa_config        empresa_config?         @relation(fields: [empresa_configId], references: [id])
  sexo                  sexo?                   @relation(fields: [sexoId], references: [id])
  times                 times?                  @relation(fields: [timesId], references: [id])
  agenda_user           agenda_user[]
  venda                 venda[]

  @@map("usuarios")
}
